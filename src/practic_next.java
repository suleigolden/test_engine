
import java.awt.Color;
import static java.lang.Thread.sleep;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import javax.swing.JOptionPane;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author SULEIGOLDEN
 */
public class practic_next extends javax.swing.JFrame {
    Connection conn;
      //Connection con;
    ResultSet rs ;
    PreparedStatement pst;
    
    private String preview_id;
    /**
     * Creates new form practic_next
     */
    public practic_next() {
        initComponents();
        conn=conect_data.conect();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        optiona = new javax.swing.JRadioButton();
        optionb = new javax.swing.JRadioButton();
        optionc = new javax.swing.JRadioButton();
        optiond = new javax.swing.JRadioButton();
        optione = new javax.swing.JRadioButton();
        bnt_next = new javax.swing.JButton();
        bnt_prev = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_question = new javax.swing.JTextArea();
        jLabel12 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lbget_lbanswer = new javax.swing.JLabel();
        lbqs = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jProgressBar1 = new javax.swing.JProgressBar();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        ans_combo = new javax.swing.JComboBox();
        conbo_addroundom = new javax.swing.JComboBox();
        jButton5 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jProgressBar3 = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        optiona.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        optiona.setForeground(new java.awt.Color(0, 0, 102));
        optiona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optionaActionPerformed(evt);
            }
        });

        optionb.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        optionb.setForeground(new java.awt.Color(0, 0, 102));
        optionb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optionbActionPerformed(evt);
            }
        });

        optionc.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        optionc.setForeground(new java.awt.Color(0, 0, 102));
        optionc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optioncActionPerformed(evt);
            }
        });

        optiond.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        optiond.setForeground(new java.awt.Color(0, 0, 102));
        optiond.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optiondActionPerformed(evt);
            }
        });

        optione.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        optione.setForeground(new java.awt.Color(0, 0, 102));
        optione.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optioneActionPerformed(evt);
            }
        });

        bnt_next.setBackground(new java.awt.Color(255, 255, 255));
        bnt_next.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        bnt_next.setForeground(new java.awt.Color(0, 51, 153));
        bnt_next.setText("Next >>>");
        bnt_next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnt_nextActionPerformed(evt);
            }
        });

        bnt_prev.setBackground(new java.awt.Color(255, 255, 255));
        bnt_prev.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        bnt_prev.setForeground(new java.awt.Color(0, 51, 153));
        bnt_prev.setText("<<<Previous");
        bnt_prev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnt_prevActionPerformed(evt);
            }
        });

        txt_question.setBackground(new java.awt.Color(0, 0, 0));
        txt_question.setColumns(20);
        txt_question.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        txt_question.setForeground(new java.awt.Color(255, 255, 255));
        txt_question.setRows(5);
        jScrollPane1.setViewportView(txt_question);

        jLabel12.setText("jLabel12");

        jLabel7.setText("jLabel7");

        lbget_lbanswer.setForeground(new java.awt.Color(255, 255, 0));
        lbget_lbanswer.setText("Get Answer");

        lbqs.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbqs.setText("0000");

        jRadioButton1.setText("jRadioButton1");

        jButton1.setText("Radio Button");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Check");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jProgressBar1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jProgressBar1.setForeground(new java.awt.Color(153, 0, 0));
        jProgressBar1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jProgressBar1.setPreferredSize(new java.awt.Dimension(146, 19));

        jButton3.setText("Answerd And Not Answerd");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel1.setText("jLabel1");
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jButton4.setText("Roundom without repeat");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        ans_combo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Beans ", "Rice", "Orange", "Banana", "Aple" }));

        jButton5.setText("update");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel2.setText("3");

        jButton6.setText("progress bar");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jProgressBar3.setBackground(new java.awt.Color(0, 0, 153));
        jProgressBar3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jProgressBar3.setForeground(new java.awt.Color(255, 255, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(optiona, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(optiond, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(optionc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(optionb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(optione, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(conbo_addroundom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(86, 86, 86)
                        .addComponent(bnt_prev)
                        .addGap(90, 90, 90)
                        .addComponent(bnt_next, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton4)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ans_combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addComponent(lbqs))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jProgressBar3, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jRadioButton1)
                        .addGap(27, 27, 27))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(jLabel7)
                                .addGap(28, 28, 28)
                                .addComponent(jButton6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(lbget_lbanswer))))
                        .addGap(53, 53, 53)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1)
                                .addGap(25, 25, 25))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton3)
                                .addContainerGap(33, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton5)
                        .addGap(180, 180, 180))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel12)
                                .addComponent(jRadioButton1))
                            .addComponent(jButton5, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(jProgressBar3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(lbget_lbanswer)
                                    .addComponent(jButton1)
                                    .addComponent(jLabel1)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jButton6)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(optiona)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(optionb)
                        .addGap(9, 9, 9)
                        .addComponent(optionc)
                        .addGap(16, 16, 16)
                        .addComponent(optiond)
                        .addGap(18, 18, 18)
                        .addComponent(optione)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(bnt_prev, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bnt_next, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(conbo_addroundom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton2)
                                    .addComponent(ans_combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton4)))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(lbqs)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void loading()
    {
         
//        jProgressBar1.setValue(val);
        Thread clock = new Thread(){
            int x=0;
            public void run(){
                for(;;){
                   jProgressBar3.setValue(x);
                   
                   x++;
                   if(x==100){
                 //    hide();
                       
                home gl = new home();
                //gl.setVisible(true);
                
               
                   }
                    try {
                        
                        sleep(50);
                        
                    } catch (InterruptedException ex) {
                       // Logger.getLogger(load.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }

        };
          clock.start();
  }
    
    public void check(){
         if(jRadioButton1.isSelected() == true){
           JOptionPane.showMessageDialog(null, "Yes");
       }else{
           JOptionPane.showMessageDialog(null, "no");
       }
    }
    public void getstart_test2(){  
           conbo_addroundom.removeAllItems();
           int getround_count=5;
           //int rand =(int)(Math.random() *getround_count);
           int size = getround_count;
        ArrayList<Integer> list = new ArrayList<Integer>(size);
        
        //ComboBoxModel model = ans_combo.getModel();
        String model [] = {"A","B","C","D","E"};
        for(int i = 1; i <= size; i++) {
            list.add(i);
        }

        Random rand = new Random();
        while(list.size() > 0) {
            int index = rand.nextInt(list.size());
            int get = list.remove(index);
            
            if(get == 5){
                get = 0;
            }
             String element  = model[get];
            //System.out.println("Element at " + 0 + " = " + element);
            //System.out.println(get);
            conbo_addroundom.addItem(element);
          
     }
}
    public void getstart_test(){  
        getstart_test2();
           String get_test_time = newtest.gettable_value();
           
           ComboBoxModel mode = ans_combo.getModel();
           int setsize = mode.getSize();
           int getround_count=setsize;
           //int rand =(int)(Math.random() *getround_count);
           int size = getround_count;
        ArrayList<Integer> list = new ArrayList<Integer>(size);
        
        ComboBoxModel model = ans_combo.getModel();
        ComboBoxModel model_option =conbo_addroundom.getModel();
        
        for(int i = 1; i <= size; i++) {
            list.add(i);
        }

        Random rand = new Random();
        while(list.size() > 0) {
            int index = rand.nextInt(list.size());
            int get = list.remove(index);
            
            if(get == 5){
                get = 0;
            }
            Object element = model.getElementAt(get);
            Object element_option = model_option.getElementAt(get);
           // System.out.println("Element at " + 0 + " = " + element);
            //System.out.println(get);
            //conbo_addroundom.addItem(element);
            if(element_option.equals("A")){
                optiona.setText(""+element);
            }else if(element_option.equals("B")){
                optionb.setText(""+element);
            }else if(element_option.equals("C")){
                optionc.setText(""+element);
            }else if(element_option.equals("D")){
                optiond.setText(""+element);
            }else if(element_option.equals("E")){
                optione.setText(""+element);
            }
            
}
         //System.out.println("*********************************************");
        //set_answers();
}
        public void set_answers2(){
        try{
            ComboBoxModel mode = ans_combo.getModel();
        int setsize = mode.getSize();
        String [] get_qest = new String [setsize];
                ComboBoxModel model = ans_combo.getModel();
                int size = model.getSize();
                for(int i=0; i < size; i++) {
                    Object element = model.getElementAt(i);
                   // System.out.println("Element at " + i + " = " + element);
                    get_qest[i] = String.format("%s",element);
                    
                    String ops = get_qest[i];
                    optiona.setText(ops);
                    
                    
             }
       
              ComboBoxModel mode2 = ans_combo.getModel();
                int setsize2 = mode2.getSize();
                String [] get_qest2 = new String [setsize2];
                ComboBoxModel model2 = ans_combo.getModel();
                int size2 = model2.getSize();
                for(int j=0; j < size2; j++) {
                    Object element2 = model2.getElementAt(j);
                   // System.out.println("Element at " + i + " = " + element);
                    get_qest2[j] = String.format("%s",element2);
                    if(get_qest2[j].equals(optiona.getText())){
                        //String ops = optiona.getText();
                        int rand =(int)(Math.random() *get_qest2.length -1);
                        String h = get_qest2[rand];
                         optionb.setText(h);
                    }else{
                     optionb.setText(get_qest[j]);
                    }
             }

                ComboBoxModel mode3 = ans_combo.getModel();
                int setsize3 = mode3.getSize();
                String [] get_qest3 = new String [setsize3];
                ComboBoxModel model3 = ans_combo.getModel();
                int size3 = model3.getSize();
                for(int k=0; k < size3; k++) {
                    Object element3 = model3.getElementAt(k);
                   // System.out.println("Element at " + i + " = " + element);
                    get_qest3[k] = String.format("%s",element3);
                    if(get_qest3[k].equals(optiona.getText()) || get_qest3[k].equals(optionb.getText())){
                        String ops = optiona.getText();
                    }else{
                     optionc.setText(get_qest[k]);
                    }
             }
                
                ComboBoxModel mode4 = ans_combo.getModel();
                int setsize4 = mode4.getSize();
                String [] get_qest4 = new String [setsize4];
                ComboBoxModel model4 = ans_combo.getModel();
                int size4 = model4.getSize();
                for(int l=0; l < size4; l++) {
                    Object element4 = model3.getElementAt(l);
                   // System.out.println("Element at " + i + " = " + element);
                    get_qest4[l] = String.format("%s",element4);
                    if(get_qest4[l].equals(optiona.getText()) || get_qest3[l].equals(optionb.getText()) || get_qest4[l].equals(optionc.getText())){
                        String ops = optiona.getText();
                    }else{
                     optiond.setText(get_qest[l]);
                    }
             }
                ComboBoxModel mode5 = ans_combo.getModel();
                int setsize5 = mode5.getSize();
                String [] get_qest5 = new String [setsize5];
                ComboBoxModel model5 = ans_combo.getModel();
                int size5 = model5.getSize();
                for(int t=0; t < size5; t++) {
                    Object element5 = model3.getElementAt(t);
                   // System.out.println("Element at " + i + " = " + element);
                    get_qest5[t] = String.format("%s",element5);
                    if(get_qest5[t].equals(optiona.getText()) || get_qest5[t].equals(optionb.getText()) || get_qest3[t].equals(optionc.getText()) || get_qest5[t].equals(optiond.getText())){
                        String ops = optiona.getText();
                    }else{
                     optione.setText(get_qest[t]);
                    }
             }
        }catch(Exception e){
            
        }
        
    }
     public void set_answers(){
        
            ComboBoxModel mode = ans_combo.getModel();
            int setsize = mode.getSize();
            String [] get_qest = new String [setsize];
                ComboBoxModel model = ans_combo.getModel();
                int size = model.getSize();
                for(int i=0; i < size; i++) {
                    Object element = model.getElementAt(i);
                   System.out.println("Element at " + i + " = " + element);
                    get_qest[i] = String.format("%s",element);
                    
                    String ops = get_qest[i];
                    //optiona.setText(ops);
                   // System.out.println(ops);
                    
             }
        
     }
    private void optionaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optionaActionPerformed
        optionb.setSelected(false);
        optionc.setSelected(false);
        optiond.setSelected(false);
        optione.setSelected(false);
        optiona.setForeground(Color.RED);
        optionb.setForeground(Color.BLACK);
        optionc.setForeground(Color.BLACK);
        optiond.setForeground(Color.BLACK);
        optione.setForeground(Color.BLACK);
        lbget_lbanswer.setText(optiona.getText());
    }//GEN-LAST:event_optionaActionPerformed

    private void optionbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optionbActionPerformed
        optiona.setSelected(false);
        optionc.setSelected(false);
        optiond.setSelected(false);
        optione.setSelected(false);
        optionb.setForeground(Color.RED);
        optiona.setForeground(Color.BLACK);
        optionc.setForeground(Color.BLACK);
        optiond.setForeground(Color.BLACK);
        optione.setForeground(Color.BLACK);
        lbget_lbanswer.setText(optionb.getText());
    }//GEN-LAST:event_optionbActionPerformed

    private void optioncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optioncActionPerformed
        optiona.setSelected(false);
        optionb.setSelected(false);
        optiond.setSelected(false);
        optione.setSelected(false);
        optionc.setForeground(Color.RED);
        optiona.setForeground(Color.BLACK);
        optionb.setForeground(Color.BLACK);
        optiond.setForeground(Color.BLACK);
        optione.setForeground(Color.BLACK);
        lbget_lbanswer.setText(optionc.getText());
    }//GEN-LAST:event_optioncActionPerformed

    private void optiondActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optiondActionPerformed
        optiona.setSelected(false);
        optionb.setSelected(false);
        optionc.setSelected(false);
        optione.setSelected(false);
        optiond.setForeground(Color.RED);
        optiona.setForeground(Color.BLACK);
        optionb.setForeground(Color.BLACK);
        optionc.setForeground(Color.BLACK);
        optione.setForeground(Color.BLACK);
        lbget_lbanswer.setText(optiond.getText());
    }//GEN-LAST:event_optiondActionPerformed

    private void optioneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optioneActionPerformed
        optiona.setSelected(false);
        optionb.setSelected(false);
        optionc.setSelected(false);
        optiond.setSelected(false);
        optione.setForeground(Color.RED);
        optiona.setForeground(Color.BLACK);
        optionb.setForeground(Color.BLACK);
        optionc.setForeground(Color.BLACK);
        optiond.setForeground(Color.BLACK);
        lbget_lbanswer.setText(optione.getText());
    }//GEN-LAST:event_optioneActionPerformed
String main_anser = "";
 int get_sum = 5;
 int life = 0;
    private void bnt_nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnt_nextActionPerformed

       reverse_forword();
       reverse_answers();
    }//GEN-LAST:event_bnt_nextActionPerformed

    private void bnt_prevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnt_prevActionPerformed

        reverse();
        reverse_answers();
    }//GEN-LAST:event_bnt_prevActionPerformed
 public void look_insertmark(){
        
             String value1 = lbqs.getText();
            // String sql ="select * from mark_test where question_id ='"+value1+"' ";
        try{
           
             String sql ="select question_id from mark_test where question_id ='"+value1+"' ";
              pst=conn.prepareStatement(sql);
             rs=pst.executeQuery();
             if(rs.next()){
//                    JOptionPane.showMessageDialog(null,"The Registration NUMBER that you are trying to save is already exist, please type in another Registration NUMBER and try again !");
                    JOptionPane.showMessageDialog(null,"Found!");
             }else{
                     
        try{
           JOptionPane.showMessageDialog(null," Not Found!");
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }finally{
        try{
            pst.close();
          // conn.close();
        }catch(Exception e){
          
        }
     }
      
       
             }
        }catch(Exception e){
         JOptionPane.showMessageDialog(null,e);
        }finally{
        try{
            pst.close();
          // conn.close();
        }catch(Exception e){
          
        }
        }
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       if(jRadioButton1.isSelected() == true){
           JOptionPane.showMessageDialog(null, "Yes");
       }else{
           JOptionPane.showMessageDialog(null, "no");
       }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       look_insertmark();
    }//GEN-LAST:event_jButton2ActionPerformed
public static Boolean allow_ = true;
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
      test_preview test_prev = new test_preview();
      test_prev.setVisible(true);
      
     // dism();
//      String d ="";
//      if(test_prev.display.equals("Welome")){
//          d = "";
//      }else{
//      d = test_prev.display;
//      String ds = this.getPreview_id();
//      JOptionPane.showMessageDialog(null, ds);
//      }
      
      
    
    
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
      getstart_test();
    }//GEN-LAST:event_jButton4ActionPerformed
 public void update_marktest(){
        String setupdate_answer = "bbbbbbbbbbbb";
         
         if(optiona.isSelected() == true){
             setupdate_answer = optiona.getText();
         }else if(optionb.isSelected() == true){
             setupdate_answer = optionb.getText();
         }else if(optionc.isSelected() == true){
             setupdate_answer = optionc.getText();
         }else if(optiond.isSelected() == true){
             setupdate_answer = optiond.getText();
         }else if(optione.isSelected() == true){
             setupdate_answer = optione.getText();
         }else{
             setupdate_answer = lbget_lbanswer.getText();
         }
         try{
           
           // String value1 = lbquestionid.getText();
            String value2 = "When Simon ___________ back tonight, he'll cook dinner.";
            String value3 = "meee";
            String value4 = optiona.getText();
            String value5 = optionb.getText();
            String value6 = optionc.getText();
            String value7 = optiond.getText();
            String value8 = optione.getText();
            String vv =jLabel2.getText();

            String sql="update mark_test set answer='"+value3+"' where question_id = '"+vv+"' ";
            pst=conn.prepareStatement(sql);
            pst.execute();
           // JOptionPane.showMessageDialog(null,"Updated");
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }finally{
        try{
            pst.close();
        }catch(Exception e){
          
        }
     }
    }
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
       update_marktest();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
       loading();
    }//GEN-LAST:event_jButton6ActionPerformed
  public void dism2(){
     test_preview test_prev = new test_preview();
      JOptionPane.showMessageDialog(null, jLabel1.getText());
      jLabel1.setText(test_prev.display);
      String id2 = jLabel1.getText();
       try{
           
             String sql ="select * from mark_test where id ='"+id2+"' ";
              pst=conn.prepareStatement(sql);
             rs=pst.executeQuery();
             if(rs.next()){
                 
                    String add1 =rs.getString("question_id");
                    
                    String add2 =rs.getString("question");
                    txt_question.setText(add2);
                    String add3 =rs.getString("answer");
                    jLabel12.setText(add3);
                    String add4 =rs.getString("opa");
                    optiona.setText(add4);
                    String add5 =rs.getString("opb");
                    optionb.setText(add5);
                    String add6 =rs.getString("opc");
                    optionc.setText(add6);
                    String add7 =rs.getString("opd");
                    optiond.setText(add7);
                    String add8 =rs.getString("ope");
                    optione.setText(add8);
                    
             }
        }catch(Exception e){
         JOptionPane.showMessageDialog(null,e);
        }finally{
        try{
            pst.close();
          // conn.close();
        }catch(Exception e){
          
        }
     }
     
  }
    public void dism(){
      test_preview test_prev = new test_preview();
     
      String id2 = "1";
     
      
    
      
 }
 public void reverse(){
     bnt_next.setEnabled(true);
       get_sum -= 1;
       
       if(get_sum == 0 || get_sum < 0){
           bnt_prev.setEnabled(false);
       }else{
        lbqs.setText(String.format("%s", get_sum));
        
     
        jLabel7.setText(String.format("%s", get_sum));
             String id2 = jLabel7.getText();
try{
           
             String sql ="select * from mark_test where id ='"+id2+"' ";
              pst=conn.prepareStatement(sql);
             rs=pst.executeQuery();
             if(rs.next()){
                 
                    String add1 =rs.getString("question_id");
                    
                    String add2 =rs.getString("question");
                    txt_question.setText(add2);
                    String add3 =rs.getString("answer");
                    jLabel12.setText(add3);
                    String add4 =rs.getString("opa");
                    optiona.setText(add4);
                    String add5 =rs.getString("opb");
                    optionb.setText(add5);
                    String add6 =rs.getString("opc");
                    optionc.setText(add6);
                    String add7 =rs.getString("opd");
                    optiond.setText(add7);
                    String add8 =rs.getString("ope");
                    optione.setText(add8);
                    
             }
        }catch(Exception e){
         JOptionPane.showMessageDialog(null,e);
        }finally{
        try{
            pst.close();
          // conn.close();
        }catch(Exception e){
          
        }
     }
   }
      // reverse_answers();
 }
 
 
  public void reverse_forword(){
     //bnt_next.setEnabled(true);
       get_sum += 1;
       
       if(get_sum == 0 || get_sum < 0){
           bnt_prev.setEnabled(false);
       }else{
        lbqs.setText(String.format("%s", get_sum));
        
      
        jLabel7.setText(String.format("%s", get_sum));
             String id2 = jLabel7.getText();
 try{
           
             String sql ="select * from mark_test where id ='"+id2+"' ";
              pst=conn.prepareStatement(sql);
             rs=pst.executeQuery();
             if(rs.next()){
                 
                    String add1 =rs.getString("question_id");
                    
                    String add2 =rs.getString("question");
                    txt_question.setText(add2);
                    String add3 =rs.getString("answer");
                    jLabel12.setText(add3);
                    String add4 =rs.getString("opa");
                    optiona.setText(add4);
                    String add5 =rs.getString("opb");
                    optionb.setText(add5);
                    String add6 =rs.getString("opc");
                    optionc.setText(add6);
                    String add7 =rs.getString("opd");
                    optiond.setText(add7);
                    String add8 =rs.getString("ope");
                    optione.setText(add8);
                    
             }
        }catch(Exception e){
         JOptionPane.showMessageDialog(null,e);
        }finally{
        try{
            pst.close();
          // conn.close();
        }catch(Exception e){
          
        }
     }
   }
      // reverse_answers();
 }
 public void clear_option(){
     optiona.setSelected(false);
     optionb.setSelected(false);
     optionc.setSelected(false);
     optiond.setSelected(false);
     optione.setSelected(false);
}
  public void reset_color(){
        optiona.setForeground(Color.BLACK);
        optionb.setForeground(Color.BLACK);
        optionc.setForeground(Color.BLACK);
        optiond.setForeground(Color.BLACK);
        optione.setForeground(Color.BLACK);
    }
 public void reverse_answers(){
                    clear_option();
                    reset_color();
                    
                    String getmainreverse_anser = jLabel12.getText();
                    String a = optiona.getText(), b =optionb.getText() , c = optionc.getText(), d = optiond.getText(), e =optione.getText();
                    //JOptionPane.showMessageDialog(null,"Call Me!" + a + b + c + d + e + "/" + main_anser);
                    if(optiona.getText().toString().equals(getmainreverse_anser)){
                        //JOptionPane.showMessageDialog(null,main_anser);
                        optiona.setSelected(true);
                    }
                    
                    else if(optionb.getText().toString().equals(getmainreverse_anser)){
                         //JOptionPane.showMessageDialog(null,main_anser);
                        optionb.setSelected(true);
                    }
                   
                    else if(optionc.getText().toString().equals(getmainreverse_anser)){
                       //  JOptionPane.showMessageDialog(null,main_anser);
                        optionc.setSelected(true);
                    }
                   
                    else if(optiond.getText().toString().equals(getmainreverse_anser)){
                        // JOptionPane.showMessageDialog(null,main_anser);
                        optiond.setSelected(true);
                    }
                    else if(optione.getText().toString().equals(getmainreverse_anser)){
                        // JOptionPane.showMessageDialog(null,main_anser);
                        optione.setSelected(true);
                    }
 } 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(practic_next.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(practic_next.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(practic_next.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(practic_next.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new practic_next().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox ans_combo;
    private javax.swing.JButton bnt_next;
    private javax.swing.JButton bnt_prev;
    private javax.swing.JComboBox conbo_addroundom;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    public javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JProgressBar jProgressBar3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbget_lbanswer;
    private javax.swing.JLabel lbqs;
    private javax.swing.JRadioButton optiona;
    private javax.swing.JRadioButton optionb;
    private javax.swing.JRadioButton optionc;
    private javax.swing.JRadioButton optiond;
    private javax.swing.JRadioButton optione;
    private javax.swing.JTextArea txt_question;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the preview_id
     */
    public String getPreview_id() {
        return preview_id;
    }

    /**
     * @param preview_id the preview_id to set
     */
    public void setPreview_id(String preview_id) {
        this.preview_id = preview_id;
    }
}
